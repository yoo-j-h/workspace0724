--1) 강의별 수강생 수 구하기
SELECT TITLE AS "강의 제목", INDEX_COUNT AS "수강생 수", COUNT(*) FROM student
JOIN ENROLLMENT USING(STUDENT_ID) 
JOIN lecture USING(LECTURE_ID)
GROUP BY TITLE,INDEX_COUNT
HAVING INDEX_COUNT > 0
ORDER BY INDEX_COUNT DESC;

--2)특정 학생의 수강 내역 조회
SELECT TITLE AS "강의 제목", T.NAME AS "강사 이름",STATUS AS "수강 상태" FROM lecture L
JOIN TEACHER T ON(T.TEACHER_ID = L.TEACHER_ID)
JOIN enrollment E ON (E.LECTURE_ID = L.LECTURE_ID)
JOIN student S ON(S.STUDENT_ID = E.STUDENT_ID)
WHERE S.STUDENT_ID = 1001
AND STATUS = 'Y';

--3)전공별 강의 개수 집계
SELECT subject AS 전공, COUNT(*) AS "강의 수" FROM lecture
JOIN teacher USING(TEACHER_ID)
GROUP BY subject
ORDER BY subject;

--4. 평균 점수가 80점 이상인 강의만 조회
SELECT TITLE, ROUND(AVG(GRADE_SCORE),1) FROM lecture
JOIN enrollment USING(LECTURE_ID)
GROUP BY TITLE
HAVING ROUND(AVG(GRADE_SCORE),1) >= 80
ORDER BY ROUND(AVG(GRADE_SCORE),1);

--5. 수강기록 등록 시, 강의별 수강 인원 수 자동 집계 트리거
CREATE OR REPLACE TRIGGER TRG_01
AFTER INSERT
ON ENROLLMENT
FOR EACH ROW
BEGIN
    UPDATE LECTURE
        SET INDEX_COUNT = INDEX_COUNT + 1
        WHERE LECTURE_ID = :NEW.LECTURE_ID;
END;
/
CREATE OR REPLACE TRIGGER TRG_02
AFTER DELETE
ON ENROLLMENT
FOR EACH ROW
BEGIN
    UPDATE LECTURE
        SET INDEX_COUNT = INDEX_COUNT - 1
        WHERE LECTURE_ID = :NEW.LECTURE_ID;
END;
/



